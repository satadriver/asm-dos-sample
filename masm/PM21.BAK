.386p
gdtseg segment PARA USE16
gdtlimit dw gdtlen-1
gdtbase dd 0
gdt0 dq 0
gdt1 dq 000098000000ffffh
gdt2 dq 004098000000ffffh
gdt3 dq 0040f20a0000ffffh
gdt4 dq 000092000000ffffh
gdt5 dq 004092000000ffffh
gdt6 dq 004098000000ffffh
gdtlen=$-gdt0
gdtseg ends

stack segment stack
db 200h dup (0)
stack ends

code1 segment           para use16
assume cs:code1
db 09ah
dw 0
dw 10h

toreal:
mov ax,20h
mov ds,ax
mov es,aX
MOV FS,AX
MOV GS,AX
mov ss,ax
MOV EAX,CR0
AND AL,0FEH
MOV CR0,EAX
JMP FAR PTR REAL
code1 ends

code2 segment para use32
assume cs:code2
mov ax,28h
mov ss,ax
mov eax,8
push eax
mov eax,offset back
push eax
ret

mov ax,18h
mov ds,ax
mov es,ax
mov fs,ax
mov gs,ax
mov cx,0ffffh
mov di,0
mov al,3
rep stosb
l0:
in al,60h
cmp al,1
jnz l0

back16:
db 09ah
dw offset toreal
dw 0
dw 8
code2 ends


code0 segment para use16
assume cs:code0
start:
mov ax,gdtseg
mov ds,ax
xor eax,eax
mov ax,code1
shl eax,4
mov word ptr ds:[gdt1+2],ax
shr eax,16
mov byte ptr ds:[gdt1+4],al

xor eax,eax
mov ax,code2
shl eax,4
mov word ptr ds:[gdt2+2],ax
shr eax,16
mov byte ptr ds:[gdt2+4],al

xor eax,eax
mov ax,gdtseg
shl eax,4
xor ebx,ebx
mov bx,offset gdt0
add eax,ebx
mov dword ptr ds:[gdtbase],eax

cli
mov al,2
out 92h,al
mov ax,13h
int 10h
lgdt qword ptr ds:[gdtlimit]

mov eax,cr0
or al,1
mov cr0,eax
db 9ah
dw 0
dw 8

real:
mov ax,stack
mov ss,ax
mov ax,3
int 10h
mov ah,4ch
int 21h
code0  ends
end start
