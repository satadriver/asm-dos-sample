.386p
gdtseg segment para use16
gdtlimit dw gdtlen-1
gdtbase dd 0
gdt0 dq 0
gdt1 dq  000098000000ffffh
gdt2 dq  0000Da000000ffffh
gdt3 dq  000098000000ffffh
gdt4 dq  000098000b2dffffh ;int 16h address
gdt5 dq 0
gdt6 dq 0
gdt7 dq 0
gdt8 dq 0
gdt9 dq 0040f20a0000ffffh
gdt10 dq 000092000000ffffh
gdt11 dq  0000e90000000068h


GDT12 DQ  0000920000000200H
GDt13 DQ  0000B20000000200H
GDT14 DQ  0000D20000000200H
GDT15 DQ 0000F20000000200H
GDT16 DQ  0000eC0000180000H ;dpl=3 ,offset work
gdtlen=$-gdt0
gdtseg ends

tssseg segment para use16
dd 0
dd 200h
ss0 dd 60h
dd 200h
ss1 dd 69h
dd 200h
ss2 dd 72h
dd 18 dup (0)
dw 0
dw $+2
db 0ffh
tssseg ends

code0 segment para use16
assume cs:code0
mov ax,58h
ltr ax

MOV AX,48H
MOV DS,AX
MOV ES,AX
MOV FS,AX
MOV GS,AX

MOV AX,60H
MOV SS,AX
MOV AX,200H
MOV SP,AX
mov ax,72H   ;apl=2
PUSH AX
MOV AX,200H
PUSH AX
MOV AX,12H    ;apl=2
PUSH AX
MOV AX,0
PUSH AX
retf        ;16b segment need 16bit stack,32bit seg need 32bit stack

toreal:

mov ax,50h
mov ds,ax
mov es,ax
mov fs,ax
mov gs,ax  ;now the stackseg is stack2,dpl=2,before back RM,make dpl=0
mov ax,50h
mov ss,ax               ;why  ???????

;mov ah,0
;pushf
;db 09ah
;dw 0
;dw 20h
mov eax,cr0 ;now dpl=0,or there will be not work!
and al,0feh
mov cr0,eAX
jmp far ptr real ;NORMAL
code0 ends

code1 segment para use16  ;para instruction??
assume cs:code1           ;code dpl=2,ds=es=fs=gs,dpl=3,stack2=stackseg,dpl=2
mov di,0
mov al,0
mov cx,0ffffh
l0:stosb
inc al
loop l0
mov ax,0ffffh
l1:
mov cx,0ffffh
l2:
dec cx
cmp cx,0
jnz l2
dec ax
cmp ax,0
jnz l1

;db 09ah
;dw offset toreal
;dw 8           ;must use callgate to change privilege level
db 09ah    ;must be instruction call not jmp gate to change privilege level
dw 0ffffh     ;offset is disposed,any result will work

dw 80H
code1 ends

code2 segment para use16
org 0     ; code dpl=0,ds=cs=fs=gs=0a000h,dpl=3,ss dpl=2
assume cs:code2
db 0eah
dw OFFSET TOREAL
dw 8
code2 ends



stack0 segment para use16
db 200h dup (0)
stack0 ends
stack1 segment para use16
db 200h dup (0)
stack1 ends
stack2 segment para use16
db 200h dup (0)
stack2 ends
stack3 segment para use16
db 200h dup (0)
stack3 ends
stack4 segment para use16
db 200h dup (0)
stack4 ends
code segment para use16
assume cs:code 
start:
mov ax,stack4
mov ss,ax
mov sp,200h
mov ax,gdtseg
mov ds,ax

xor eax,eax
mov ax,stack0
shl eax,4
mov word ptr ds:[gdt12+2],ax
shr eax,16
mov byte ptr ds:[gdt12+4],al

xor eax,eax
mov ax,stack1
shl eax,4
mov word ptr ds:[GDT13+2],ax
SHR EAX,16
MOV BYTE PTR DS:[GDT13+4],AL

xor eax,eax
mov ax,stack2
shl eax,4
mov word ptr ds:[GDT14+2],ax
SHR EAX,16
MOV BYTE PTR DS:[GDT14+4],AL

XOR EAX,EAX
MOV AX,STACK3
SHL EAX,4
MOV WORD PTR DS:[GDT15+2],AX
SHR EAX,16
MOV BYTE PTR DS:[GDT15+4],AL

xor eax,eax
mov ax,code0
shl eax,4
mov word ptr ds:[gdt1+2],ax
shr eax,16
mov byte ptr ds:[gdt1+4],al
mov byte ptr ds:[gdt1+7],ah
xor eax,eax

mov ax ,code1
shl eax,4
mov word ptr ds:[gdt2+2],ax
shr eax,16
mov byte ptr ds:[gdt2+4],al
mov byte ptr ds:[gdt2+7],ah

mov ax,code2
shl eax,4
mov word ptr ds:[gdt3+2],ax
shr eax,16
mov byte ptr ds:[gdt3+4],AL

xor eax,eax
mov ax,tssseg
shl eax,4
mov word ptr ds:[gdt11+2],ax
shr eax,16
mov byte ptr ds:[gdt11+4],al
mov byte ptr ds:[gdt11+7],ah

xor eax,eax
mov ax,offset gdt0
xor ebx,ebx
mov bx,gdtseg
shl ebx,4
add eax,ebx
mov dword ptr ds:[gdtbase],eax

cli
mov ax,13h
int 10h
lgdt qword ptr ds:[gdtlimit]
mov al,2
out 92h,al
mov eax,cr0
or al,1
mov cr0,eax
db 09ah
dw 0
dw 8

real:
mov al,0
out 92h,al
mov ax,0a000h
mov es,ax
mov cx,0ffffh
mov al,4
mov di,0
rep stosb

mov ax,stack0 ;without original stack,can't return to dos,why?????
mov ss,ax
;mov sp,1feh

mov ax,3
int 10h
mov ax,4c00h
int 21h
code ends
end start
