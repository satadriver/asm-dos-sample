.386p
gdtseg segment para use16
gdtlimit dw gdtlen-1
gdtbase dd 0
gdt0 dq 0
gdt1 dq  00009a000000ffffh
gdt2 dq  0040Da000000ffffh
gdt3 dq  0000f20a0000ffffh

gdt4 dq  0000e90000000068h ;;;
GDT5 DQ  0040920000000200H
GDT6 DQ  0040B20000000200H
GDT7 DQ  0040D20000000200H
GDT8 DQ  0040F20000000200H
gdt9 dq  004098000000ffffh
gdtlen=$-gdt0
gdtseg ends

tssseg segment para use16
dd 0
dd 200h
ss0 dd 28h
dd 200h
ss1 dd 31h
dd 200h
ss2 dd 3Ah
dd 18 dup (0)
dw 0
dw $+2
db 0ffh
tssseg ends

code0 segment para use16
assume cs:code0
mov ax,20h
ltr ax
db 09ah
dw 0
dw 48h

toreal:
MOV AX,18H
MOV DS,AX
MOV ES,AX
MOV FS,AX
MOV GS,AX
mov eax,cr0
and al,0feh
mov cr0,eAX
JMP FAR PTR REAL
code0 ends


code2 segment para use32
assume cs:code2
MOV AX,28H
MOV SS,AX
MOV AX,200H
MOV SP,AX
MOV AX,18H
MOV DS,AX
MOV ES,AX
MOV FS,AX
MOV GS,AX
mov eax,3AH   ;;;
PUSH eAX
MOV eAX,200H
PUSH eAX
MOV eAX,12H
PUSH eAX
MOV eAX,0
PUSH eAX
retf

;toreal:
;mov eax,cr0
;and al,0feh
;mov cr0,eax
;jmp far ptr real
code2 ends

code1 segment para use32  ;para
assume cs:code1
mov ax,18h
mov es,ax
mov di,0
mov al,0
mov cx,0ffffh
l0:stosb
inc al
loop l0
mov ax,0ffffh
l1:
mov cx,0ffffh
l2:
dec cx
cmp cx,0
jnz l2
dec ax
cmp ax,0
jnz l1
db 9ah
dw offset toreal
dw 0
dw 8
code1 ends

stack0 segment para use16
db 200h dup (0)
stack0 ends
stack1 segment para use16
db 200h dup (0)
stack1 ends
stack2 segment para use16
db 200h dup (0)
stack2 ends

code segment para use16
assume cs:code 
start:
mov ax,gdtseg
mov ds,ax

xor eax,eax
mov ax,code2
shl eax,4
mov word ptr ds:[gdt9+2],ax
shr eax,16
mov byte ptr ds:[gdt9+4],al

xor eax,eax
mov ax,stack0
shl eax,4
mov word ptr ds:[gdt5+2],ax
shr eax,16
mov byte ptr ds:[gdt5+4],al

xor eax,eax
mov ax,stack1
shl eax,4
mov word ptr ds:[GDT6+2],ax
SHR EAX,16
MOV BYTE PTR DS:[GDT6+4],AL

xor eax,eax
mov ax,stack2
shl eax,4
mov word ptr ds:[GDT7+2],ax
SHR EAX,16
MOV BYTE PTR DS:[GDT7+4],AL

xor eax,eax
mov ax,code0
shl eax,4
mov word ptr ds:[gdt1+2],ax
shr eax,16
mov byte ptr ds:[gdt1+4],al
mov byte ptr ds:[gdt1+7],ah
xor eax,eax
mov ax ,code1
shl eax,4
mov word ptr ds:[gdt2+2],ax
shr eax,16
mov byte ptr ds:[gdt2+4],al
mov byte ptr ds:[gdt2+7],ah

xor eax,eax
mov ax,tssseg
shl eax,4
mov word ptr ds:[gdt4+2],ax
shr eax,16
mov byte ptr ds:[gdt4+4],al
mov byte ptr ds:[gdt4+7],ah

xor eax,eax
mov ax,offset gdt0
xor ebx,ebx
mov bx,gdtseg
shl ebx,4
add eax,ebx
mov dword ptr ds:[gdtbase],eax

cli
mov ax,13h
int 10h
lgdt qword ptr ds:[gdtlimit]
mov al,2
out 92h,al
mov eax,cr0
or al,1
mov cr0,eax
db 09ah
dw 0
dw 8

real:
mov ax,3
int 10h
mov ah,4ch
int 21h
code ends
end start

