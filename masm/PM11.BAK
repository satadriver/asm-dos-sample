.386p
code1 segment para use16
assume cs:code1
mov ax,98h
mov ds,ax
mov es,ax
mov fs,ax
mov gs,ax
mov ss,ax
mov sp,100h
mov ax,68h
ltr ax
db 0eah
dw 0
dw 88h      ;  1                                               80=tss0=code1                                               88=tss1=code2                                                             90=tss2=code3             
             
jmprm:
clts
mov eax,cr0
and eax,0fffffffeh
mov cr0,EAX
db 0eah
dw offset rm16
dw seg rm16
code1 ends

code2 segment para use32
assume cs:code2
db 0eah
dw 0
dw 0
dw 90h          ;2
mov ax,60h
mov ds,ax
mov es,ax
mov fs,ax
mov gs,ax
mov edi,0
mov ecx,0ffffh
mov bl,1
l3:
mov [edi],bl
inc edi
loop l3
mov ax,0ffffh
l4:
mov cx,0ffffh
l5:dec cx
cmp cx,0
jnz l5
dec ax
cmp ax,0
jnz l4
db 0eah
dw 0
dw  0
dw 90h
code2 ends

code3 segment para use32
assume cs:code3
mov ax,60h
mov ds,ax
mov es,ax
mov edi,0
mov ecx,0ffffh
mov bl,0
l0:
mov [edi],bl
inc di
inc bl
loop l0
mov ax,0ffffh
l1:
mov cx,0ffffh
l2:dec cx
cmp cx,0
jnz l2
dec ax
cmp ax,0
jnz l1
db 09ah
dw 0
dw 0
dw 20h
code3 ends

code4 segment para use32
assume cs:code4
db 0eah
dw 0
dw 0
dw 88h
mov ax,60h
mov ds,ax
mov es,ax
mov fs,ax
mov gs,ax
mov edi,0
mov ecx,0ffffh
mov bl,2
l6:
mov [edi],bl
inc edi
loop l6
mov ax,0ffffh
l7:
mov cx,0ffffh
l8:dec cx
cmp cx,0
jnz l8
dec ax
cmp ax,0
jnz l7
db 0eah
dw 0
dw 0
dw 80h
code4 ends

code5 segment para use32
assume cs:code5
nop
code5 ends

gdtseg segment para use16
spptr dw 0
ssptr dw 0
gdtlen dw gdtend-1
gdtbase dd 0
gdt0 dq 0
gdt1 dq 000098000000ffffh
gdt2 dq 004098000000ffffh
gdt3 dq 004098000000ffffh
gdt4 dq 004098000000ffffh
gdt5 dq 004098000000ffffh
gdt6 dq 000098000000ffffh
gdt7 dq 0040920000000fffh
gdt8 dq 0040b20000000fffh
gdt9 dq 0040d20000000fffh
gdt10 dq 0040f20000000fffh
gdt11 dq 0040f20b8000ffffh
gdt12 dq 0040f20a0000ffffh
gdt13 dq 0000890000000068h;tss0
gdt14 dq 0000890000000068h;tss1
gdt15 dq 0000890000000068h;tss2
gdt16 dq 0000850000680000h;tss0
gdt17 dq 0000850000700000h;tss1
gdt18 dq 0000850000780000h;tss2
gdt19 dq 000092000000ffffh

gdtend dw $-gdt0
gdtseg ends

stack0 segment para use16
db 1000h dup (0)
stack0 ends
stack1 segment para use16
db 1000h dup (0)
stack1 ends
stack2 segment para use16
db 1000h dup (0)
stack2 ends
stack3 segment para use16
db 1000h dup (0)
stack3 ends

tssseg0 segment para use16
dd 26 dup (0)
db 0ffh
tssseg0 ends

tssseg1 segment para use16
dd 0
dd 100h    
dd 38h
dd 100h
dd 41h
dd 100h
dd 4ah
dd 0
eipbase1 dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 100h
dd 0
dd 0
dd 0
dd 0
csbase1 dd 10h
dd 38h
dd 0
dd 0
dd 0
dd 0
dw 0
dw $+2
dd 0ffh
tssseg1 ends

tssseg2 segment para use16
dd 0
dd 100h    
dd 38h
dd 100h
dd 41h
dd 100h
dd 4ah
dd 0
eipbase2 dd 0
dd 0
dd 0
dd 0
dd 0
dd 0
dd 100h
dd 0
dd 0
dd 0
dd 0
csbase2 dd 18h
dd 38h
dd 0
dd 0
dd 0
dd 0
dw 0
dw $+2
dd 0ffh
tssseg2 ends

stack segment stack
db 1000h dup (0)
stack ends

code0 segment para use16
assume cs:code0,ss:stack,ds:gdtseg
start:
mov ax,stack
mov ss,ax
mov ax,gdtseg
mov ds,ax
mov ax,sp
mov word ptr ds:[spptr],ax
mov ax,ss
mov word ptr ds:[ssptr],ax

xor eax,eax
mov ax,gdtseg
shl eax,4
xor esi,esi
mov si,offset gdt0
add eax,esi
mov dword ptr ds:[gdtbase],eax

xor eax,eax
mov ax,tssseg0
shl eax,4
mov word ptr ds:[gdt13+2],ax
shr eax,16
mov byte ptr ds:[gdt13+4],al

xor eax,eax
mov ax,tssseg1
shl eax,4
mov word ptr ds:[gdt14+2],ax
shr eax,16
mov byte ptr ds:[gdt14+4],al

xor eax,eax
mov ax,tssseg2
shl eax,4
mov word ptr ds:[gdt15+2],ax
shr eax,16
mov byte ptr ds:[gdt15+4],al

xor eax,eax
mov ax,code1
shl eax,4
mov word ptr ds:[gdt1+2],ax
shr eax,16
mov byte ptr ds:[gdt1+4],al

xor eax,eax
mov ax,code2
shl eax,4
mov word ptr ds:[gdt2+2],ax
shr eax,16
mov byte ptr ds:[gdt2+4],al

xor eax,eax
mov ax,code3
shl eax,4
mov word ptr ds:[gdt3+2],ax
shr eax,16
mov byte ptr ds:[gdt3+4],al

xor eax,eax
mov ax,code4
shl eax,4
mov word ptr ds:[gdt4+2],ax
shr eax,16
mov byte ptr ds:[gdt4+4],al

xor eax,eax
mov ax,code5
shl eax,4
mov word ptr ds:[gdt5+2],ax
shr eax,16
mov byte ptr ds:[gdt5+4],al

xor eax,eax
mov ax,code1
shl eax,4
xor esi,esi
mov si,offset jmprm
add eax,esi
mov word ptr ds:[gdt6+2],ax
shr eax,16
mov byte ptr ds:[gdt6+4],al

xor eax,eax
mov ax,stack0
shl eax,4
mov word ptr ds:[gdt7+2],ax
shr eax,16
mov byte ptr ds:[gdt7+4],al

xor eax,eax
mov ax,stack1
shl eax,4
mov word ptr ds:[gdt8+2],ax
shr eax,16
mov byte ptr ds:[gdt8+4],al

xor eax,eax
mov ax,stack2
shl eax,4
mov word ptr ds:[gdt9+2],ax
shr eax,16
mov byte ptr ds:[gdt9+4],al

xor eax,eax
mov ax,stack3
shl eax,4
mov word ptr ds:[gdt10+2],ax
shr eax,16
mov byte ptr ds:[gdt10+4],al

mov ax,13h
int 10h
lgdt qword ptr ds:[gdtlen]

cli
mov al,2
out 92h,al
mov eax,cr0
or eax,1
mov cr0,eax
db 09ah
dw 0
dw 8

rm16:
mov ax,0a000h
mov ds,ax
mov si,0
mov cx,0ffffh
mov ax,4
l9:
mov ds:[si],ax
add si,2
loop l9
mov ax,0ffffh
l10:
mov cx,0ffffh
l11:
dec cx
cmp cx,0
jnz l11
dec ax
cmp ax,0
jnz l10
sti
mov al,0
out 92h,al
mov ax,gdtseg
mov ds,ax
mov es,ax
mov fs,ax
mov gs,ax
lss sp,dword ptr ds:[spptr]
mov ax,4f02h
mov bx,3h
int 10h
mov ah,4ch
int 21h
code0 ends
end start

