.386p
gdtseg segment para use16
gdtlimit dw gdtlen-1
gdtbase dd 0
gdt0 dq 0
gdt1 dq    000098000000FFFFH
GDT2 DQ 004098000000FFFFH
GDT3 DQ 004F92000000FFFFH
GDT4 DQ 0040920a0000ffffh
GDT5 DQ 000092000000FFFFH
GDTLEN=$-GDT0
GDTSEG ENDS

stack0 segment para USE16
DB 1000H DUP (0)
STACK0 ENDS

CODE1 SEGMENT PARA USE16
ASSUME CS:CODE1
DB 0EAH
DW 0
DW 10H

TOREAL:
MOV AX,28H
MOV DS,AX
MOV ES,AX
MOV FS,AX
MOV GS,AX
MOV SS,AX
MOV EAX,CR0
AND AL,0FEH
MOV CR0,EAX
JMP FAR PTR REAL
CODE1 ENDS

CODE2 SEGMENT PARA USE32
ASSUME CS:CODE2
MOV AX,20H
MOV ES,AX
MOV EDI,0
MOV AL,2
MOV ECX,0FFFFH
REP STOSB
LL:IN AL,60H
CMP AL,1
JNZ LL

MOV AX,18H
MOV ES,AX
MOV ECX,0FFFFH
MOV EDI,0c00000000H
MOV EAX,1
L0:
STOSD
INC EAX
LOOP L0
L1:
IN AL,60H
CMP AL,39H
JNZ L1
DB 09AH
DW OFFSET TOREAL
DW 0
DW 8
CODE2 ENDS



CODE0 SEGMENT PARA USE16
ASSUME CS:CODE0
START:
mov ax,gdtseg
mov ds,ax
xor eax,eax
mov ax,gdtseg
shl eax,4
xor ebx,ebx
mov bx,offset gdt0
add eax,ebx
mov dword ptr ds:[gdtbase],eax

xor eax,eax
mov ax,code1
shl eax,4
mov word ptr ds:[gdt1+2],ax
shr eax,16
mov byte ptr ds:[gdt1+4],al

xor eax,eax
mov ax,code2
shl eax,4
mov word ptr ds:[gdt2+2],ax
shr eax,16
mov byte ptr ds:[gdt2+4],al

mov ax,4F02h
MOV BX,118H
int 10h
cli
mov al,2
out 92h,al
lgdt qword ptr ds:[gdtlimit]
mov eax,cr0
or al,1
mov cr0,eax
db 09ah
dw 0
dw 8

real:
mov ax,stack0
mov ss,ax
mov ax,3
int 10h
mov ah,4ch
int 21h
code0 ends
end start
